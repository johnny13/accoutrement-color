// Color API
// =========


// Color
// -----
/// This is the primary API function for
/// accessing colors in your palette,
/// or making adjustments on the fly.
///
/// This `color` function isn't just a wrapper for `map-get()`,
/// but also handles internal color-references and functional adjustments.
/// We provide access to the global `$colors` map by default,
/// but you can also pass in arbitrary palettes when you need.
///
/// @group colors
///
/// @parameter {string | list} $color -
///   The name of a color in your palette,
///   or a valid css color-value,
///   with optional adjustments
///   in the form of `<origin-color> (<function>: <args...>)`.
///
/// @parameter {map} $palette [$colors] -
///   A map containing the source color-palette
///   for accessing previously-defined colors.
///
/// @return {color} -
///   A calculated css-ready color,
///   based on your global color palette and adjustments.
///
/// @example scss
///   html {
///     background: color('background');
///     color: color('text');
///   }
@function color(
  $color,
  $palette: $colors
) {
  // Parse arguments
  $color: map-get($palette, $color) or $color;
  $base: nth($color, 1);
  $adjust: if(length($color) > 1, nth($color, 2), ());

  // Recursive check
  $color: if(map-has-key($palette, $base), color($base), $base);

  // Adjustments
  @each $function, $value in $adjust {
    $function: _ac-color-get-function($function);
    $color: call($function, $color, $value...);
  }

  @return $color;
}
